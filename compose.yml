services:
  app-base:
    build:
      context: .
      dockerfile: Dockerfile
    image: korean-learning-app-base
    env_file:
      - .env
    networks:
      - app-network
  
  tgbot:
    image: korean-learning-app-base
    env_file:
      - .env
    depends_on:
      - api
      - qdrant
      - postgres
    command: ["python", "-m", "src.tgbot.bot"]
    develop:
      watch:
       - path: src/
         action: sync+restart
         target: src/
    networks:
      - app-network

  api:
    image: korean-learning-app-base
    env_file:
      - .env
    depends_on:
      - qdrant
      - postgres
    command: ["python", "-m", "uvicorn", "src.api.main:app", "--host", "0.0.0.0", "--port", "8000"]
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data
    networks:
      - app-network
    
  qdrant:
    image: qdrant/qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    expose:
      - "6333"
      - "6334"
    volumes:
      - qdrant_storage:/qdrant/storage
    networks:
      - app-network

  postgres:
    image: postgres:15
    restart: always
    env_file:
      - .env
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - app-network

volumes:
  qdrant_storage:
  postgres_data:
  #  redis_data:

networks:
  app-network:

#  redis:
#    image: redis:7
#    restart: always
#    volumes:
#      - redis_data:/data
#    networks:
#      - botnet
#
#  nginx:
#    image: nginx:1.25
#    restart: always
#    depends_on:
#      - api
#    ports:
#      - "80:80"
#      - "443:443"
#    volumes:
#      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
#      - ./nginx/ssl:/etc/nginx/ssl
#    networks:
#      - botnet
#