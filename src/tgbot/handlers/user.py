from aiogram import Router
from aiogram.filters import CommandStart, Command
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from chatgpt_md_converter import telegram_format

from src.db.crud import add_user, clear_chat_history
from src.schemas.schemas import TelegramUser
from src.db.database import async_session
from src.tgbot.misc.utils import send_admin_message

user_router = Router()

@user_router.message(CommandStart())
async def user_start(message: Message):
    """Handle the /start command"""
    await message.answer(
        telegram_format(
            "‚ú® –î–∞–≤–∞–π –≤–º–µ—Å—Ç–µ –ø–æ–≤—Ç–æ—Ä—è—Ç—å –∏–ª–∏ –∏–∑—É—á–∞—Ç—å –∫–æ—Ä–µ–π—Å–∫–∏–π —è–∑—ã–∫!\n\n"
            "–°–ª–µ–≤–∞ –≤–Ω–∏–∑—É –µ—Å—Ç—å –º–µ–Ω—é - –≤—ã–±–µ—Ä–∏ —Ç–æ, —á—Ç–æ —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ.\n\n"
            "–ú–æ—è –æ—Å–Ω–æ–≤–Ω–∞—è —Ü–µ–ª—å - –ø–æ–º–æ—á—å —Ç–µ–±–µ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å –≥—Ä–∞–º–º–∞—Ç–∏–∫–æ–π.\n"
            "–ù–æ, –ø–æ–º–∏–º–æ —ç—Ç–æ–≥–æ, –º—ã –º–æ–∂–µ–º –ø—Ä–æ—Å—Ç–æ –ø–æ–æ–±—â–∞—Ç—å—Å—è –Ω–∞ –∫–æ—Ä–µ–π—Å–∫–æ–º, –∫–∞–∫ –Ω–∞—Å—Ç–æ—è—â–∏–µ –¥—Ä—É–∑—å—è, –∏–ª–∏ —è –ø–æ–º–æ–≥—É –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –Ω—É–∂–Ω–æ–µ —Ç–µ–±–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ."
        )
    )

    user_info = f"@{message.from_user.username or 'N/A'} (ID: {message.from_user.id})"
    await send_admin_message(
        message.bot, f"{user_info} —Å—Ç–∞—Ä—Ç–æ–≤–∞–ª –±–æ—Ç–∞", "‚ö†Ô∏è –°—Ç–∞—Ä—Ç–æ–≤–∞–ª –ë–æ—Ç–∞"
    )

    # IMPORTANT Uncomment to turn on user adding with /start

    # user = TelegramUser(
    #     user_id=message.from_user.id,
    #     username=message.from_user.username,
    #     first_name=message.from_user.first_name,
    #     last_name=message.from_user.last_name,
    #     chat_id=message.chat.id
    # )
    #
    # async for session in get_db():
    #     await add_user(session=session, user=user)


@user_router.message(Command("givemebotaccess"))
async def give_bot_access(message: Message):
    """Handle the /givemebotaccess command - secret command to register user"""
    user = TelegramUser(
        user_id=message.from_user.id,
        username=message.from_user.username,
        first_name=message.from_user.first_name,
        last_name=message.from_user.last_name,
        chat_id=message.chat.id
    )
    
    try:
        async with async_session() as session:
            await add_user(session=session, user=user)
            user_info = f"@{message.from_user.username or 'N/A'} (ID: {message.from_user.id})"
            await send_admin_message(message.bot, f"{user_info} –ø–æ–ª—É—á–∏–ª –¥–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É", "üôãNew User")
        await message.answer("–î–æ—Å—Ç—É–ø –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞.")
    except Exception as e:
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ –¥–æ—Å—Ç—É–ø–∞.")
        import logging
        logging.error(f"Error adding user {user.user_id}: {e}")


@user_router.message(Command("restart"))
async def clear_user_history(message: Message, state: FSMContext):
    """Handle the /restart command"""
    user = TelegramUser(
        user_id=message.from_user.id,
        username=message.from_user.username,
        first_name=message.from_user.first_name,
        last_name=message.from_user.last_name,
        chat_id=message.chat.id
    )
    
    try:
        async with async_session() as session:
            await clear_chat_history(session, user)
            
        # Clear any active FSM state as well
        await state.clear()
        await message.answer("–ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ –æ—á–∏—â–µ–Ω–∞! –ß–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å?")
            
    except Exception as e:
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞")
        # Log the error
        import logging
        logging.error(f"Error clearing chat history for user {user.user_id}: {e}")


@user_router.message(Command("grammar"))
async def grammar_command(message: Message):
    """Handle the /grammar command"""
    await message.answer(
        "–ü—Ä–æ –∫–∞–∫—É—é –≥—Ä–∞–º–º–∞—Ç–∏–∫—É —Ç—ã —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ? –ú–æ–∂–µ—à—å –Ω–∞–ø–∏—Å–∞—Ç—å –µ—ë –Ω–∞ –∫–æ—Ä–µ–π—Å–∫–æ–º (–ø—Ä–∏–º.: ÏúºÎãàÍπå) –∏–ª–∏ –ø—Ä–∏–º–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ —Ä—É—Å—Å–∫–æ–º (–ø—Ä–∏–º.: –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø—Ä–∏—á–∏–Ω—ã)."
    )


@user_router.message(Command("conversation"))
async def conversation_command(message: Message):
    """Handle the /conversation command"""
    await message.answer(
        "–ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —è —Ç–≤–æ–π –∫–æ—Ä–µ–π—Å–∫–∏–π –¥—Ä—É–≥, —Å –∫–æ—Ç–æ—Ä—ã–º –º–æ–∂–Ω–æ –≤–µ—Å—Ç–∏ –¥–∏–∞–ª–æ–≥ üòª\n\n"
        "–ú–æ–∂–µ—à—å –ø–æ–ø—Ä–æ—Å–∏—Ç—å –º–µ–Ω—è –∏—Å–ø—Ä–∞–≤–ª—è—Ç—å –æ—à–∏–±–∫–∏ –∏–ª–∏ –Ω–∞–æ–±–æ—Ä–æ—Ç –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏—Ö.\n\n"
        "- ÏïàÎÖïÌïòÏÑ∏Ïöî?\n"
        "- Î¥áÏù¥ÎùºÍ≥† Ìï¥Ïöî~ Î∞òÍ∞ÄÏõåÏöî!\n"
        "- Ïù¥Î¶ÑÏù¥ Î≠êÏòàÏöî?"
    )


@user_router.message(Command("translate"))
async def translate_command(message: Message):
    """Handle the /translate command"""
    await message.answer(
        "–í —ç—Ç–æ–º —Ä–µ–∂–∏–º–µ –º–æ–∂–µ—à—å –ø—Ä–∏—Å—ã–ª–∞—Ç—å –º–Ω–µ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ —Ä—É—Å—Å–∫–æ–º, —á—Ç–æ–±—ã —è –ø–µ—Ä–µ–≤–µ–ª –∏—Ö –Ω–∞ –∫–æ—Ä–µ–π—Å–∫–æ–π –∏ –Ω–∞ –∫–æ—Ä–µ–π—Å–∫–æ–º, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞ —Ä—É—Å—Å–∫–æ–º"
    )