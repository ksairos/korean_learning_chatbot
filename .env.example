# Korean Learning Chatbot - Environment Configuration Template
# Copy this file to .env and fill in your actual values

# ============================================================================
# REQUIRED CONFIGURATION
# ============================================================================

# Telegram Bot Configuration
BOT_TOKEN=your_telegram_bot_token_here
ADMIN_IDS=123456789,987654321  # Comma-separated list of admin Telegram user IDs

# OpenAI API Configuration
OPENAI_API_KEY=your_openai_api_key_here

# ============================================================================
# DATABASE CONFIGURATION
# ============================================================================

# PostgreSQL Database (Main application data)
POSTGRES_HOST=localhost
POSTGRES_PORT=5433
POSTGRES_DB=korean_bot
POSTGRES_USER=postgres
POSTGRES_PASSWORD=your_postgres_password_here

# ============================================================================
# VECTOR DATABASE CONFIGURATION
# ============================================================================

# Qdrant Vector Database (Semantic search)
QDRANT_HOST=localhost
QDRANT_PORT=6333
# QDRANT_API_KEY=your_qdrant_api_key_if_using_cloud

# Qdrant Collection Names (usually don't need to change these)
QDRANT_COLLECTION_NAME=korean_grammar
QDRANT_COLLECTION_NAME_V2=korean_grammar_v2
QDRANT_COLLECTION_NAME_FINAL=korean_grammar_v2_small
QDRANT_COLLECTION_NAME_RAG=howtostudykorean
QDRANT_COLLECTION_NAME_RAG_SMALL=howtostudykorean_small
QDRANT_COLLECTION_NAME_RAG_EXTENDED=howtostudykorean_extended
QDRANT_COLLECTION_NAME_RAG_FINAL=howtostudykorean_extended_small

# ============================================================================
# EMBEDDING MODELS CONFIGURATION
# ============================================================================

# OpenAI Embedding Models
EMBEDDING_MODEL=text-embedding-3-small
# Alternative: text-embedding-3-large (more accurate but more expensive)

# Sparse Embedding Model (BM25-based keyword matching)
SPARSE_EMBEDDING_MODEL=Qdrant/bm25

# Late Interaction Model (Fine-grained token-level matching)
LATE_INTERACTION_MODEL=jinaai/jina-colbert-v2

# Reranking Model (optional, currently commented out in code)
RERANKING_MODEL=jinaai/jina-reranker-v2-base-multilingual

# ============================================================================
# FASTAPI CONFIGURATION
# ============================================================================

# FastAPI Server Configuration
FASTAPI_HOST=localhost
FASTAPI_PORT=8000

# ============================================================================
# EXTERNAL SERVICES
# ============================================================================

# Korean Dictionary API (for /vocab command)
KRDICT_API_KEY=your_krdict_api_key_here

# Logfire Observability Platform (monitoring and logging)
LOGFIRE_API_KEY=your_logfire_api_key_here

# ============================================================================
# OPTIONAL CONFIGURATION
# ============================================================================

# Redis Configuration (currently not implemented, for future state storage)
USE_REDIS=false
# REDIS_HOST=localhost
# REDIS_PORT=6379
# REDIS_PASSWORD=your_redis_password_if_needed

# ============================================================================
# DEVELOPMENT NOTES
# ============================================================================

# 1. Get your Telegram bot token from @BotFather on Telegram
# 2. Get your OpenAI API key from https://platform.openai.com/api-keys
# 3. Get your Logfire API key from https://logfire.pydantic.dev/
# 4. Admin IDs are your Telegram user IDs (send /start to @userinfobot to get yours)

# SECURITY WARNING:
# - Never commit your actual .env file to version control
# - Keep your API keys secure and rotate them regularly
# - Use environment-specific configurations for development/staging/production

# DOCKER CONFIGURATION:
# When using Docker Compose, some hosts may need to be changed:
# - POSTGRES_HOST=postgres (service name in docker-compose)
# - QDRANT_HOST=qdrant (service name in docker-compose)
# - REDIS_HOST=redis (if Redis is enabled)